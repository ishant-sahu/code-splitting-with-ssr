{"version":3,"sources":["../source/server.js"],"names":["server","webpack_configuration","settings","server_bundle_path","resolve","context","process","cwd","output","chunk_info_json_file_path","chunk_info_filename","then","additional","configuration","chunks","env","NODE_ENV","require","cache","starter","default","stringified_starter","String","Error","inspect","catch","error","console","log","stack","exit"],"mappings":";;;;;;;;;;kBAOwBA,M;;AAPxB;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEe,SAASA,MAAT,CAAgBC,qBAAhB,EAAuCC,QAAvC,EACf;AACC;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAMC,qBAAqB,eAAKC,OAAL,CAAaH,sBAAsBI,OAAtB,IAAiCC,QAAQC,GAAR,EAA9C,EAA6DL,SAASF,MAAT,CAAgBQ,MAA7E,CAA3B;;AAEA,KAAMC,4BAA4B,kCAAqBR,qBAArB,EAA4CC,SAASQ,mBAArD,CAAlC;;AAEA;AACA,QAAO,2BAAcP,kBAAd,EAAkCQ,IAAlC,CAAuC,YAC9C;AACC,SAAO,2BAAcF,yBAAd,CAAP;AACA,EAHM,EAINE,IAJM,CAID,YACN;AACC;AACA,MAAMC,aACN;AACCC,kBAAgBZ,qBADjB;;AAGCa,SAHD,oBAIC;AACC;AACA;AACA;AACA,QAAIR,QAAQS,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EACA;AACC,YAAOC,QAAQC,KAAR,CAAcT,yBAAd,CAAP;AACA;;AAED;AACA,WAAOQ,QAAQR,yBAAR,CAAP;AACA;AAfF,GADA;;AAmBA;AACA;;AAEA,MAAMU,UAAUF,QAAQd,kBAAR,CAAhB;;AAEA;;AAEA,MAAI,OAAOgB,OAAP,KAAmB,UAAvB,EACA;AACC,UAAOA,QAAQP,UAAR,CAAP;AACA;;AAED,MAAI,OAAOO,QAAQC,OAAf,KAA2B,UAA/B,EACA;AACC,UAAOD,QAAQC,OAAR,CAAgBR,UAAhB,CAAP;AACA;;AAED,MAAIS,sBAAsBC,OAAOH,OAAP,CAA1B;AACA,MAAIE,wBAAwB,iBAA5B,EACA;AACCA,yBAAsB,yBAAeF,OAAf,EAAwB,IAAxB,EAA8B,CAA9B,CAAtB;AACA;;AAED,QAAM,IAAII,KAAJ,CAAU,mFACR,eAAKC,OAAL,CAAaL,OAAb,CADQ,CAAV,CAAN;AAEA,EAnDM,EAoDNM,KApDM,CAoDA,UAASC,KAAT,EACP;AACC;AACAC,UAAQC,GAAR,CAAY,iBAAZ;;AAEA;AACAD,UAAQD,KAAR,SAAmBA,MAAMG,KAAN,IAAeH,KAAlC;;AAEA;AACAC,UAAQC,GAAR,CAAY,kBAAZ;;AAEA;AACAtB,UAAQwB,IAAR,CAAa,CAAb;AACA,EAjEM,CAAP;AAkEA","file":"server.js","sourcesContent":["import path from 'path'\r\nimport fs from 'fs'\r\nimport util from 'util'\r\n\r\nimport wait_for_file from './wait for file'\r\nimport { chunk_info_file_path } from './chunks'\r\n\r\nexport default function server(webpack_configuration, settings)\r\n{\r\n\t// if (!webpack_configuration.context)\r\n\t// {\r\n\t// \tthrow new Error(`You must set \"context\" parameter in your Webpack configuration`)\r\n\t// }\r\n\r\n\t// Path to `build/server.js`\r\n\t// (built by Webpack)\r\n\tconst server_bundle_path = path.resolve(webpack_configuration.context || process.cwd(), settings.server.output)\r\n\r\n\tconst chunk_info_json_file_path = chunk_info_file_path(webpack_configuration, settings.chunk_info_filename)\r\n\r\n\t// waits for the first Webpack server-side build to finish and produce `webpage_rendering_server.js`\r\n\treturn wait_for_file(server_bundle_path).then(function()\r\n\t{\r\n\t\treturn wait_for_file(chunk_info_json_file_path)\r\n\t})\r\n\t.then(function()\r\n\t{\r\n\t\t// Will be passed to the server code\r\n\t\tconst additional =\r\n\t\t{\r\n\t\t\tconfiguration : webpack_configuration,\r\n\r\n\t\t\tchunks()\r\n\t\t\t{\r\n\t\t\t\t// Just in case `nodemon` was not set up to watch and\r\n\t\t\t\t// restart the Node.js process on bundle rebuild,\r\n\t\t\t\t// clear Webpack require() cache for hot reload in development mode.\r\n\t\t\t\tif (process.env.NODE_ENV !== 'production')\r\n\t\t\t\t{\r\n\t\t\t\t\tdelete require.cache[chunk_info_json_file_path]\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// In production mode `require()` cache will be in effect\r\n\t\t\t\treturn require(chunk_info_json_file_path)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Start webpage rendering server\r\n\t\t// (this module will be compiled by Webpack server-side build from './source/server.js')\r\n\r\n\t\tconst starter = require(server_bundle_path)\r\n\r\n\t\t// Fixing Babel `module.exports.default` issues\r\n\r\n\t\tif (typeof starter === 'function')\r\n\t\t{\r\n\t\t\treturn starter(additional)\r\n\t\t}\r\n\r\n\t\tif (typeof starter.default === 'function')\r\n\t\t{\r\n\t\t\treturn starter.default(additional)\r\n\t\t}\r\n\r\n\t\tlet stringified_starter = String(starter)\r\n\t\tif (stringified_starter === '[object Object]')\r\n\t\t{\r\n\t\t\tstringified_starter = JSON.stringify(starter, null, 2)\r\n\t\t}\r\n\r\n\t\tthrow new Error(`[universal-webpack] Your server source file must export a function. ` +\r\n\t\t\t`Got ${util.inspect(starter)}`)\r\n\t})\r\n\t.catch(function(error)\r\n\t{\r\n\t\t// bright red color\r\n\t\tconsole.log(\"\\x1b[1m\\x1b[31m\")\r\n\r\n\t\t// Output the error stack trace\r\n\t\tconsole.error(`\\n${error.stack || error}`)\r\n\r\n\t\t// reset color and brightness\r\n\t\tconsole.log('\\x1b[39m\\x1b[22m')\r\n\r\n\t\t// exit with non-zero exit code (indicating that an error happened)\r\n\t\tprocess.exit(1)\r\n\t})\r\n}\r\n"]}